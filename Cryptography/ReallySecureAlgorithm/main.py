from Crypto.Util.number import bytes_to_long, long_to_bytes

with open('flag.txt.encrypted', 'rb') as fp:
    data = fp.read()
data = bytes_to_long(data)

p = 163457106450783445806665763936840795224335118638688747118145262051536966852927178714354472420894161567345798876484431370418160230276680030234659674821189812953137829238466457790011401311065933161137619929619240992208932900359653100522606364930588672146004948494703010403785602523382411941848901725348597907089
q = 169092937488173601150107963609235159099068030966810117600280934194940989117225047356630083642289619557970268922961226770984214401901054922632851546963233694621594948971464931017385316063330450260229563385896256150161969568316042071516610553055735726314300969140360092385383098597756071675521622606699780460681
e = 65537

n = p * q
totient = (p - 1) * (q - 1)
d = pow(e, -1, totient)
pt = pow(data, d, n)
print(long_to_bytes(pt))
